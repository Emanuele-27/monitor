diff --git a/node_modules/primereact/calendar/calendar.esm.js b/node_modules/primereact/calendar/calendar.esm.js
index f99373b..1100ead 100644
--- a/node_modules/primereact/calendar/calendar.esm.js
+++ b/node_modules/primereact/calendar/calendar.esm.js
@@ -1450,6 +1450,14 @@ var Calendar = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (
       });
     }
 
+    if (props.finestra) {
+      let dateCopy = structuredClone(date);
+      if (props.finestra === 'mese')
+        selectedValues = [getFirstDayOfMonth(dateCopy), getLastDayOfMonth(dateCopy)];
+      else if (props.finestra === 'settimana')
+        selectedValues = [getFirstDayOfWeek(dateCopy), getLastDayOfWeek(dateCopy)];
+    }
+
     updateInputfield(selectedValues);
   };
 
@@ -3354,6 +3362,48 @@ var Calendar = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (
     return null;
   };
 
+  function getLastDayOfMonth(date) {
+    date = new Date(date);
+    return new Date(date.getFullYear(), date.getMonth() + 1, 0);
+  }
+
+  function getFirstDayOfMonth(date) {
+    date = new Date(date);
+    return new Date(date.getFullYear(), date.getMonth(), 1);
+  }
+
+  function getFirstDayOfWeek(date) {
+    let dayName = new Date(date).toLocaleString(props.locale, { weekday: "short" });
+    return aggiungiGiorni(new Date(date), -daysLeftToMonday(dayName));
+  }
+  function getLastDayOfWeek(date) {
+    let dayName = new Date(date).toLocaleString(props.locale, { weekday: "short" });
+    return aggiungiGiorni(new Date(date), (6 - daysLeftToMonday(dayName)));
+  }
+
+  function daysLeftToMonday(dayName) {
+    switch (dayName) {
+      case 'mar':
+        return 1;
+      case 'mer':
+        return 2;
+      case 'gio':
+        return 3;
+      case 'ven':
+        return 4;
+      case 'sab':
+        return 5;
+      case 'dom':
+        return 6;
+      default:
+        return 0;
+    }
+  }
+
+  function aggiungiGiorni(date, giorni) {
+    return new Date(date.setDate(date.getDate() + giorni))
+  }
+
   var otherProps = ObjectUtils.findDiffKeys(props, Calendar.defaultProps);
   var className = classNames('p-calendar p-component p-inputwrapper', props.className, (_classNames = {}, _defineProperty(_classNames, "p-calendar-w-btn p-calendar-w-btn-".concat(props.iconPos), props.showIcon), _defineProperty(_classNames, 'p-calendar-disabled', props.disabled), _defineProperty(_classNames, 'p-calendar-timeonly', props.timeOnly), _defineProperty(_classNames, 'p-inputwrapper-filled', props.value || DomHandler.hasClass(inputRef.current, 'p-filled') && inputRef.current.value !== ''), _defineProperty(_classNames, 'p-inputwrapper-focus', focusedState), _classNames));
   var panelClassName = classNames('p-datepicker p-component', props.panelClassName, {
